apiVersion: v1
kind: ConfigMap
metadata:
  name: kibana-config
  namespace: cctv-streaming
data:
  kibana.yml: |
    server.name: kibana
    server.host: "0.0.0.0"
    elasticsearch.hosts: ["http://elasticsearch:9200"]
    monitoring.ui.container.elasticsearch.enabled: true
    elasticsearch.username: "kibana_system"
    elasticsearch.password: "kibana123"
    xpack.security.enabled: false
    telemetry.enabled: false
    telemetry.optIn: false

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: kibana
  namespace: cctv-streaming
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kibana
  template:
    metadata:
      labels:
        app: kibana
    spec:
      containers:
      - name: kibana
        image: docker.elastic.co/kibana/kibana:8.9.0
        ports:
        - containerPort: 5601
        env:
        - name: ELASTICSEARCH_URL
          value: http://elasticsearch:9200
        - name: SERVER_BASEPATH
          value: ""
        volumeMounts:
        - name: kibana-config
          mountPath: /usr/share/kibana/config/kibana.yml
          subPath: kibana.yml
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /api/status
            port: 5601
          initialDelaySeconds: 120
          periodSeconds: 10
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            path: /api/status
            port: 5601
          initialDelaySeconds: 60
          periodSeconds: 5
          timeoutSeconds: 3
      volumes:
      - name: kibana-config
        configMap:
          name: kibana-config

---

apiVersion: v1
kind: Service
metadata:
  name: kibana
  namespace: cctv-streaming
spec:
  selector:
    app: kibana
  ports:
  - port: 5601
    targetPort: 5601
  type: ClusterIP